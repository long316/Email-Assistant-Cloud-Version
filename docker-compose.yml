version: "3.9"

services:
  email_assistant:
    build:
      context: ./email-assistant
      dockerfile: Dockerfile
    image: email-assistant:latest
    container_name: email-assistant
    command: gunicorn -b 0.0.0.0:5000 "src.api_server:create_app()"
    env_file:
      - ./email-assistant/.env
    environment:
      # Ensure OAuth redirect includes the path prefix handled by Caddy
      - OAUTH_REDIRECT_URL=${OAUTH_REDIRECT_URL:-https://your-domain.com/email-assistant/oauth/google/callback}
      # Point to mounted secrets path in container
      - GOOGLE_OAUTH_CLIENT_JSON=${GOOGLE_OAUTH_CLIENT_JSON:-/secrets/credentials.json}
      # Files root inside container (mounted volume below)
      - FILES_ROOT=${FILES_ROOT:-/data/files}
      # DATABASE_URL, API_KEY, etc. loaded from .env via env_file
    volumes:
      - ./email-assistant/files:/data/files
      - ./email-assistant/secrets/credentials.json:/secrets/credentials.json:ro
      - ./email-assistant/logs:/app/logs
    expose:
      - "5000"
    networks:
      - web

  api:
    build:
      context: ./video-content-analysis
      dockerfile: Dockerfile
    image: video-analysis:latest
    container_name: video-analysis-api
    command: >
      gunicorn src.api.main:app -c deployment/gunicorn_config.py
    env_file:
      - ./video-content-analysis/.env
    environment:
      REDIS_HOST: redis
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      ROOT_PATH: /video-analysis
    volumes:
      - ./video-content-analysis/logs:/app/logs
      - ./video-content-analysis/videos:/app/videos
    depends_on:
      - redis
    networks:
      - web

  worker:
    image: video-analysis:latest
    container_name: video-analysis-worker
    command: >
      sh -c "celery -A src.tasks.celery_app worker --loglevel=info --concurrency=${CELERY_WORKER_CONCURRENCY:-4}"
    env_file:
      - ./video-content-analysis/.env
    environment:
      REDIS_HOST: redis
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./video-content-analysis/logs:/app/logs
      - ./video-content-analysis/videos:/app/videos
    depends_on:
      - redis
    networks:
      - web

  redis:
    image: redis:6-alpine
    container_name: video-analysis-redis
    networks:
      - web


  caddy:
    image: caddy:2-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      DOMAIN: ${DOMAIN}
    depends_on:
      - api
      - email_assistant
    networks:
      - web

networks:
  web:

volumes:
  caddy_data:
  caddy_config:
